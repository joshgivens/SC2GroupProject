// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// diff_SMC_sin
List diff_SMC_sin(double x_0, double t, int n, int timesteps, double varphi, bool resample);
RcppExport SEXP _SC2GroupProject_diff_SMC_sin(SEXP x_0SEXP, SEXP tSEXP, SEXP nSEXP, SEXP timestepsSEXP, SEXP varphiSEXP, SEXP resampleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x_0(x_0SEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type timesteps(timestepsSEXP);
    Rcpp::traits::input_parameter< double >::type varphi(varphiSEXP);
    Rcpp::traits::input_parameter< bool >::type resample(resampleSEXP);
    rcpp_result_gen = Rcpp::wrap(diff_SMC_sin(x_0, t, n, timesteps, varphi, resample));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SC2GroupProject_diff_SMC_sin", (DL_FUNC) &_SC2GroupProject_diff_SMC_sin, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_SC2GroupProject(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
